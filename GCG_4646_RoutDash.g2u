Program.Sub.ScreenSU.Start
Gui.fAddRollDet..Create
Gui.fAddRollDet..Caption("Additional Roll Detail")
Gui.fAddRollDet..Size(18615,10080)
Gui.fAddRollDet..MinX(0)
Gui.fAddRollDet..MinY(0)
Gui.fAddRollDet..Position(0,0)
Gui.fAddRollDet..BackColor(-2147483633)
Gui.fAddRollDet..MousePointer(0)
Gui.fAddRollDet..Event(UnLoad,Unload_all)
Gui.fAddRollDet.GsGcAddRollDet.Create(GsGridControl)
Gui.fAddRollDet.GsGcAddRollDet.Size(18300,8940)
Gui.fAddRollDet.GsGcAddRollDet.Position(120,90)
Gui.fAddRollDet.GsGcAddRollDet.Event(CellValueChanged,GsGcAddRollDet_CellValueChanged)
Gui.fAddRollDet.cmdSavChng.Create(Button)
Gui.fAddRollDet.cmdSavChng.Size(1500,375)
Gui.fAddRollDet.cmdSavChng.Position(120,9195)
Gui.fAddRollDet.cmdSavChng.Caption("Save Changes")
Gui.fAddRollDet.cmdSavChng.Event(Click,cmdSavChng_Click)
Gui.fAddRollDet.cmdXP2XL.Create(Button)
Gui.fAddRollDet.cmdXP2XL.Size(1500,375)
Gui.fAddRollDet.cmdXP2XL.Position(1755,9195)
Gui.fAddRollDet.cmdXP2XL.Caption("Export 2 Excel")
Gui.fAddRollDet.cmdXP2XL.Event(Click,cmdXP2XL_Click)
Gui.fAddBagDet..Create
Gui.fAddBagDet..Caption("Additional Bag Details")
Gui.fAddBagDet..Size(8370,10665)
Gui.fAddBagDet..MinX(0)
Gui.fAddBagDet..MinY(0)
Gui.fAddBagDet..Position(0,0)
Gui.fAddBagDet..BackColor(-2147483633)
Gui.fAddBagDet..MousePointer(0)
Gui.fAddBagDet..Event(UnLoad,Unload_all)
Gui.fAddBagDet.GsGcAddBagDet.Create(GsGridControl)
Gui.fAddBagDet.GsGcAddBagDet.Size(8070,9570)
Gui.fAddBagDet.GsGcAddBagDet.Position(90,90)
Gui.fAddBagDet.GsGcAddBagDet.Event(CellValueChanged,GsGcAddBagDet_CellValueChanged)
Gui.fAddBagDet.cmdSavChng1.Create(Button)
Gui.fAddBagDet.cmdSavChng1.Size(1635,375)
Gui.fAddBagDet.cmdSavChng1.Position(90,9750)
Gui.fAddBagDet.cmdSavChng1.Caption("Save Changes")
Gui.fAddBagDet.cmdSavChng1.Event(Click,cmdSavChng1_Click)
Gui.fAddBagDet.cmdXP2XL1.Create(Button)
Gui.fAddBagDet.cmdXP2XL1.Size(1635,375)
Gui.fAddBagDet.cmdXP2XL1.Position(1890,9750)
Gui.fAddBagDet.cmdXP2XL1.Caption("Export 2 Excel")
Gui.fAddBagDet.cmdXP2XL1.Event(Click,cmdXP2XL_Click)
Gui.fXlExport..Create
Gui.fXlExport..Caption("Export to Excel")
Gui.fXlExport..Size(6510,2460)
Gui.fXlExport..MinX(0)
Gui.fXlExport..MinY(0)
Gui.fXlExport..Position(0,0)
Gui.fXlExport..BackColor(-2147483633)
Gui.fXlExport..MousePointer(0)
Gui.fXlExport.lbl1.Create(Label,"Select Export Folder",True,1935,255,0,120,195,True,0,"Arial",8,-2147483633,0)
Gui.fXlExport.lbl1.DefaultValue("")
Gui.fXlExport.txtXPFold.Create(TextBox,"",True,5565,300,0,120,435,True,0,"Arial",8,-2147483643,1)
Gui.fXlExport.cmdSelectFold.Create(Button)
Gui.fXlExport.cmdSelectFold.Size(420,375)
Gui.fXlExport.cmdSelectFold.Position(5820,390)
Gui.fXlExport.cmdSelectFold.Caption("^")
Gui.fXlExport.cmdSelectFold.Event(Click,cmdSelectFold_Click)
Gui.fXlExport.txtXPName.Create(TextBox,"",True,2265,300,0,120,1110,True,0,"Arial",8,-2147483643,1)
Gui.fXlExport.lbl2.Create(Label,"File Name",True,1935,255,0,120,870,True,0,"Arial",8,-2147483633,0)
Gui.fXlExport.cmdExportAct.Create(Button)
Gui.fXlExport.cmdExportAct.Size(1620,375)
Gui.fXlExport.cmdExportAct.Position(120,1530)
Gui.fXlExport.cmdExportAct.Caption("Export")
Gui.fXlExport.cmdExportAct.Event(Click,cmdExportAct_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
v.Global.sIcon.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
f.Intrinsic.Control.Try
'whoa
f.ODBC.Connection!conx.openconnection(v.Ambient.PDSN,v.Ambient.PUser,v.Ambient.pPass)
f.Intrinsic.Control.if(v.Caller.Switches,=,"R")
	f.Intrinsic.Control.CallSub(fAddlRollDet)
f.Intrinsic.Control.ElseIf(v.Caller.Switches,=,"B")
	f.Intrinsic.Control.CallSub(fAddlBagDet)
F.Intrinsic.Control.Else
	f.Intrinsic.Control.CallSub(Unload_all)
f.Intrinsic.Control.EndIf
f.Intrinsic.Control.catch
f.Intrinsic.Control.CallSub(catching,"sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.fAddlRollDet.Start
v.Local.sSQL.Declare(String)
f.Intrinsic.Control.try
F.Intrinsic.String.Build("{0}\GAB\GAS\gss2.ico",V.Caller.PluginsDir,v.global.sIcon)
gui.fAddRollDet..Icon(v.Global.sIcon)
gui.fXlExport..Icon(v.Global.sIcon)
f.Data.DataTable.CreateFromSQL("AddRollDT","conx","SELECT ROUTER, TARGET_GAUGE,DIVISOR,LBS_PER_HOUR,TGT_ROLL_FOOTAGE,TGT_ROLL_WT,CORE_WT,CORE_SZ,ROLLS_PER_PALLET,CREATED_BY,MODIFIED_BY FROM GCG_4646_ADDLRTRINFO",true)
F.Data.DataTable.AddColumn("AddRollDT","Edit","string")
f.Data.DataTable.SetValue("AddRollDT",-1,"edit","N")
f.Data.Dataview.Create("AddRollDT","AddRollVw",22)
gui.fAddRollDet.GsGcAddRollDet.AddGridviewFromDataview("AddRollGrid","AddRollDT","AddRollVw")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","edit","visible","false")

gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROUTER","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROUTER","headerfontbold", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROUTER","caption","Router")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROUTER","readonly", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROUTER","allowedit", false)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROUTER","MinWidth", 65)

gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TARGET_GAUGE","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TARGET_GAUGE","headerfontbold", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TARGET_GAUGE","caption","Target Gauge")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TARGET_GAUGE","readonly", false)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TARGET_GAUGE","allowedit", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TARGET_GAUGE","EditMaskType", "Numeric")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TARGET_GAUGE","EditMask", "########0.00")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TARGET_GAUGE","EditMaskAsDisplayFormat", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TARGET_GAUGE","MinWidth", 65)


gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","DIVISOR","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","DIVISOR","headerfontbold", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","DIVISOR","caption","Divisor")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","DIVISOR","readonly", false)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","DIVISOR","allowedit", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","DIVISOR","EditMaskType", "Numeric")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","DIVISOR","EditMask", "########0.00")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","DIVISOR","EditMaskAsDisplayFormat", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","DIVISOR","MinWidth", 65)



gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","LBS_PER_HOUR","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","LBS_PER_HOUR","headerfontbold", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","LBS_PER_HOUR","caption","Lbs per Hour")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","LBS_PER_HOUR","readonly", false)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","LBS_PER_HOUR","allowedit", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","LBS_PER_HOUR","EditMaskType", "Numeric")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","LBS_PER_HOUR","EditMask", "########0.00")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","LBS_PER_HOUR","EditMaskAsDisplayFormat", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","LBS_PER_HOUR","MinWidth", 65)

gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_FOOTAGE","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_FOOTAGE","headerfontbold", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_FOOTAGE","caption","Target Roll Footage")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_FOOTAGE","readonly", false)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_FOOTAGE","allowedit", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_FOOTAGE","EditMaskType", "Numeric")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_FOOTAGE","EditMask", "########0.00")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_FOOTAGE","EditMaskAsDisplayFormat", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_FOOTAGE","MinWidth", 65)

gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_WT","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_WT","headerfontbold", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_WT","caption","Target Roll Weight")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_WT","readonly", false)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_WT","allowedit", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_WT","EditMaskType", "Numeric")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_WT","EditMask", "########0.00")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_WT","EditMaskAsDisplayFormat", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","TGT_ROLL_WT","MinWidth", 65)

gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_WT","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_WT","headerfontbold", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_WT","caption","Core Weight")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_WT","readonly", false)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_WT","allowedit", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_WT","EditMaskType", "Numeric")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_WT","EditMask", "########0.00")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_WT","EditMaskAsDisplayFormat", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_WT","MinWidth", 65)

gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_SZ","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_SZ","headerfontbold", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_SZ","caption","Core Size")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_SZ","readonly", false)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_SZ","allowedit", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_SZ","EditMaskType", "Numeric")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_SZ","EditMask", "########0.00")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_SZ","EditMaskAsDisplayFormat", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CORE_SZ","MinWidth", 65)

gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROLLS_PER_PALLET","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROLLS_PER_PALLET","headerfontbold", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROLLS_PER_PALLET","caption","Rolls Per Pallet")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROLLS_PER_PALLET","readonly", false)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROLLS_PER_PALLET","allowedit", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROLLS_PER_PALLET","EditMaskType", "Numeric")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROLLS_PER_PALLET","EditMask", "########0")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROLLS_PER_PALLET","EditMaskAsDisplayFormat", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","ROLLS_PER_PALLET","MinWidth", 65)

gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CREATED_BY","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CREATED_BY","headerfontbold", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CREATED_BY","caption","Recorded By")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CREATED_BY","readonly", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CREATED_BY","allowedit", false)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","CREATED_BY","MinWidth", 65)

gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","MODIFIED_BY","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","MODIFIED_BY","headerfontbold", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","MODIFIED_BY","caption","Modified By")
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","MODIFIED_BY","readonly", true)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","MODIFIED_BY","allowedit", false)
gui.fAddRollDet.GsGcAddRollDet.SetColumnProperty("AddRollGrid","MODIFIED_BY","MinWidth", 65)


'cond formatting to high light edited rows
gui.fAddRollDet.GsGcAddRollDet.AddStyleFormatCondition("AddRollGrid","edit","ffcntag","equal","Y")
gui.fAddRollDet.GsGcAddRollDet.SetStyleFormatConditionProperty("AddRollGrid","edit","ffcntag","backcolor","LightSteelBlue")
gui.fAddRollDet.GsGcAddRollDet.SetStyleFormatConditionProperty("AddRollGrid","edit","ffcntag","ApplyToRow","true")

gui.fAddRollDet.GsGcAddRollDet.SetGridviewProperty("AddRollGrid","Enableappearanceoddrow",True)
gui.fAddRollDet.GsGcAddRollDet.SetGridviewProperty("AddRollGrid","OptionsFindAlwaysVisible",True)
gui.fAddRollDet.GsGcAddRollDet.SetGridviewProperty("AddRollGrid","OptionsViewShowAutoFilterRow",True)
gui.fAddRollDet.GsGcAddRollDet.MainView("AddRollGrid")
gui.fAddRollDet..Enabled(true)


gui.fAddRollDet..Show
gui.fAddRollDet..SetFocus
f.Intrinsic.Control.catch
f.Intrinsic.Control.CallSub(catching,"sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.fAddlRollDet.End

Program.Sub.GsGcAddRollDet_CellValueChanged.Start
f.Data.DataTable.SetValue("AddRollDT",v.Args.rowindex,"Edit","Y")
gui.fAddRollDet.GsGcAddRollDet.SetCellValueByColumnName("AddRollGrid","edit",v.Args.rowindex,"Y")
Program.Sub.GsGcAddRollDet_CellValueChanged.End

Program.Sub.cmdSavChng_Click.Start
v.Local.icount.Declare(long)
v.Local.sSQL.Declare(string)
v.Local.sTgtGge.Declare(string)
v.Local.sDiv.Declare(string)
v.Local.sLbsPerHr.Declare(string)
v.Local.sTgtRollWt.Declare(string)
v.Local.sTgtRollFt.Declare(string)
v.Local.sCoreWt.Declare(string)
v.Local.sCoreSz.Declare(string)
v.Local.sRollsPerPal.Declare(string)
v.Local.sRout.Declare(string)

f.Intrinsic.Control.try


gui.fAddBagDet..Enabled(false)

'create view of rows with edit flag as Y
f.data.Dataview.Create("AddRollDT","savinvw",22,"edit = 'Y'","")
f.Intrinsic.Control.if(v.DataView.AddRollDT!savinvw.RowCount,=,0)
	Function.Intrinsic.UI.CloseWaitDialog
	f.Intrinsic.UI.Msgbox("No changes have been made as nothing has been edited on the grid.")
	gui.fAddBagDet..SetFocus
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf




f.Intrinsic.Control.For(v.Local.icount,0,v.dataview.AddRollDT!savinvw.RowCount--,1)
	v.Local.sRout.set(v.dataview.AddRollDT!savinvw(v.Local.icount).ROUTER!fieldval)
	v.Local.sTgtGge.set(v.dataview.AddRollDT!savinvw(v.Local.icount).TARGET_GAUGE!fieldval)
	v.Local.sDiv.set(v.dataview.AddRollDT!savinvw(v.Local.icount).DIVISOR!fieldval)
	v.Local.sLbsPerHr.set(v.dataview.AddRollDT!savinvw(v.Local.icount).LBS_PER_HOUR!fieldval)
	v.Local.sTgtRollWt.set(v.dataview.AddRollDT!savinvw(v.Local.icount).TGT_ROLL_WT!fieldval)
	v.Local.sTgtRollFt.set(v.dataview.AddRollDT!savinvw(v.Local.icount).TGT_ROLL_FOOTAGE!fieldval)
	v.Local.sCoreWt.set(v.dataview.AddRollDT!savinvw(v.Local.icount).CORE_WT!fieldval)
	v.Local.sCoreSz.set(v.dataview.AddRollDT!savinvw(v.Local.icount).CORE_SZ!fieldval)
	v.Local.sRollsPerPal.set(v.dataview.AddRollDT!savinvw(v.Local.icount).ROLLS_PER_PALLET!fieldval)
	f.Intrinsic.string.Build("UPDATE GCG_4646_ADDLRTRINFO SET TARGET_GAUGE = '{0}',DIVISOR = '{1}',LBS_PER_HOUR = '{2}',TGT_ROLL_FOOTAGE = '{3}',TGT_ROLL_WT = '{4}',CORE_WT = '{5}',CORE_SZ = '{6}', ROLLS_PER_PALLET = '{7}',MODIFIED_BY = '{8}' WHERE ROUTER = '{9}'",v.Local.sTgtGge,v.Local.sDiv,v.Local.sLbsPerHr,v.Local.sTgtRollFt,v.Local.sTgtRollWt,v.Local.sCoreWt,v.Local.sCoreSz,v.local.sRollsPerPal,v.Caller.User,v.Local.sRout,V.Local.sSql)
	F.ODBC.Connection!conx.EXECUTE(V.Local.sSQL)

	f.Data.dataview.SetValue("AddRollDT","savinvw",v.Local.icount,"MODIFIED_BY",v.Caller.User)
F.Intrinsic.Control.Next(v.Local.icount)
f.Data.dataview.Close("AddRollDT","savinvw")
f.Data.DataTable.SetValue("AddRollDT",-1,"edit","N")
f.Intrinsic.UI.Msgbox("Changes have been made.")
gui.fAddRollDet..Enabled(true)
gui.fAddRollDet..SetFocus
f.Intrinsic.Control.catch
f.Intrinsic.Control.CallSub(catching,"sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdSavChng_Click.End

Program.Sub.fAddlBagDet.Start
f.Intrinsic.Control.try
F.Intrinsic.String.Build("{0}\GAB\GAS\gss2.ico",V.Caller.PluginsDir,v.global.sIcon)
gui.fAddBagDet..Icon(v.Global.sIcon)
gui.fXlExport..Icon(v.Global.sIcon)

f.Data.DataTable.CreateFromSQL("AddBagDT","conx","SELECT ROUTER, BAGS_PER_SET,BAGS_PER_GAYLORD,CREATED_BY,MODIFIED_BY FROM GCG_4646_ADDLRTRINF1",true)
F.Data.DataTable.AddColumn("AddBagDT","Edit","string")
f.Data.DataTable.SetValue("AddBagDT",-1,"edit","N")
f.Data.Dataview.Create("AddBagDT","AddBagVw",22)
gui.fAddBagDet.GsGcAddBagDet.AddGridviewFromDataview("AddBagGrid","AddBagDT","AddBagVw")
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","edit","visible","false")


gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","ROUTER","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","ROUTER","headerfontbold", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","ROUTER","caption","Router")
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","ROUTER","readonly", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","ROUTER","allowedit", false)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","ROUTER","MinWidth", 65)

gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_SET","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_SET","headerfontbold", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_SET","caption","Bags per Set")
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_SET","readonly", false)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_SET","allowedit", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_SET","EditMaskType", "Numeric")
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_SET","EditMask", "########0")
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_SET","EditMaskAsDisplayFormat", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_SET","MinWidth", 80)


gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_GAYLORD","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_GAYLORD","headerfontbold", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_GAYLORD","caption","Bags per Gaylord")
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_GAYLORD","readonly", false)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_GAYLORD","allowedit", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_GAYLORD","EditMaskType", "Numeric")
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_GAYLORD","EditMask", "########0")
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_GAYLORD","EditMaskAsDisplayFormat", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","BAGS_PER_GAYLORD","MinWidth", 80)

gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","CREATED_BY","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","CREATED_BY","headerfontbold", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","CREATED_BY","caption","Recorded By")
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","CREATED_BY","readonly", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","CREATED_BY","allowedit", false)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","CREATED_BY","MinWidth", 65)

gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","MODIFIED_BY","headerforecolor", v.Color.PRI-GSS-00)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","MODIFIED_BY","headerfontbold", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","MODIFIED_BY","caption","Modified By")
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","MODIFIED_BY","readonly", true)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","MODIFIED_BY","allowedit", false)
gui.fAddBagDet.GsGcAddBagDet.SetColumnProperty("AddBagGrid","MODIFIED_BY","MinWidth", 65)

'cond formatting to high light edited rows
gui.fAddBagDet.GsGcAddBagDet.AddStyleFormatCondition("AddBagGrid","edit","ffcntag","equal","Y")
gui.fAddBagDet.GsGcAddBagDet.SetStyleFormatConditionProperty("AddBagGrid","edit","ffcntag","backcolor","LightSteelBlue")
gui.fAddBagDet.GsGcAddBagDet.SetStyleFormatConditionProperty("AddBagGrid","edit","ffcntag","ApplyToRow","true")


gui.fAddBagDet.GsGcAddBagDet.SetGridviewProperty("AddBagGrid","Enableappearanceoddrow",True)
gui.fAddBagDet.GsGcAddBagDet.SetGridviewProperty("AddBagGrid","OptionsFindAlwaysVisible",True)
gui.fAddBagDet.GsGcAddBagDet.SetGridviewProperty("AddBagGrid","OptionsViewShowAutoFilterRow",True)

gui.fAddBagDet.GsGcAddBagDet.MainView("AddBagGrid")
gui.fAddBagDet..Enabled(true)


gui.fAddBagDet..Show
gui.fAddBagDet..SetFocus
f.Intrinsic.Control.catch
f.Intrinsic.Control.CallSub(catching,"sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.fAddlBagDet.End

Program.Sub.GsGcAddBagDet_CellValueChanged.Start
f.Data.DataTable.SetValue("AddBagDT",v.Args.rowindex,"Edit","Y")
gui.fAddBagDet.GsGcAddBagDet.SetCellValueByColumnName("AddBagGrid","edit",v.Args.rowindex,"Y")
Program.Sub.GsGcAddBagDet_CellValueChanged.End

Program.Sub.cmdSavChng1_Click.Start
v.Local.icount.Declare(long)
v.Local.sSQL.Declare(string)
v.Local.sBagsPerSet.Declare(string)
v.Local.sBagsPerGl.Declare(string)
v.Local.sRout.Declare(string)
f.Intrinsic.Control.Try
gui.fAddBagDet..Enabled(false)

'create view of rows with edit flag as Y
f.data.Dataview.Create("AddBagDT","savinvw",22,"edit = 'Y'","")
f.Intrinsic.Control.if(v.DataView.AddBagDT!savinvw.RowCount,=,0)
	Function.Intrinsic.UI.CloseWaitDialog
	f.Intrinsic.UI.Msgbox("No changes have been made as nothing has been edited on the grid.")
	gui.fAddBagDet..SetFocus
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf

f.Intrinsic.Control.For(v.Local.icount,0,v.dataview.AddBagDT!savinvw.RowCount--,1)
	v.Local.sBagsPerSet.Set(v.dataview.AddBagDT!savinvw(v.Local.icount).BAGS_PER_SET!fieldval)
	v.Local.sBagsPerGl.Set(v.dataview.AddBagDT!savinvw(v.Local.icount).BAGS_PER_GAYLORD!fieldval)
	v.Local.sRout.set(v.dataview.AddBagDT!savinvw(v.Local.icount).ROUTER!fieldval)

	f.Intrinsic.string.Build("UPDATE GCG_4646_ADDLRTRINF1 SET BAGS_PER_SET = '{0}',MODIFIED_BY = '{1}',BAGS_PER_GAYLORD = '{3}' WHERE ROUTER = '{2}'",v.Local.sBagsPerSet,V.caller.User,v.Local.sRout,v.Local.sBagsPerGl,V.Local.sSql)
	F.ODBC.Connection!conx.EXECUTE(V.Local.sSQL)
	f.Data.dataview.SetValue("AddBagDT","savinvw",v.Local.icount,"MODIFIED_BY",v.Caller.User)
F.Intrinsic.Control.Next(v.Local.icount)
f.Data.dataview.Close("AddBagDT","savinvw")
f.Data.DataTable.SetValue("AddBagDT",-1,"edit","N")
f.Intrinsic.UI.Msgbox("Changes have been made.")
gui.fAddBagDet..Enabled(true)
gui.fAddBagDet..SetFocus
f.Intrinsic.Control.catch
f.Intrinsic.Control.CallSub(catching,"sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdSavChng1_Click.End

Program.Sub.Unload_all.Start
f.ODBC.Connection!conx.Close
f.Intrinsic.Control.End
Program.Sub.Unload_all.End

Program.Sub.cmdXP2XL_Click.Start
gui.fXlExport..Show
Program.Sub.cmdXP2XL_Click.End

Program.Sub.fXlExport_UnLoad.Start
gui.fXlExport..Visible(false)
gui.fXlExport..ClearScreen
f.Intrinsic.Control.if(v.Caller.Switches,=,"R")
	gui.fAddRollDet..Enabled(true)
	gui.fAddRollDet..SetFocus
f.Intrinsic.Control.ElseIf(v.Caller.Switches,=,"B")
	gui.fAddBagDet..Enabled(true)
	gui.fAddBagDet..SetFocus
F.Intrinsic.Control.Else
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf

Program.Sub.fXlExport_UnLoad.End

Program.Sub.cmdExportAct_Click.Start
v.Local.sOutFile.Declare(String)
v.Local.sMsg.Declare(String)
v.Local.bCheck.Declare(boolean)
v.Local.sOutFile.Set(v.Screen.fXlExport!txtXPName.text)
f.Intrinsic.Control.Try

f.Intrinsic.control.if(v.Local.sOutFile.Trim,=,"")
	f.Intrinsic.String.Build("File name field is empty. Please Enter a file name",v.Local.sOutFile,v.Local.sMsg)
	f.Intrinsic.UI.Msgbox(v.Local.sMsg)
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf
f.intrinsic.String.Build("{0}\{1}.xlsx",v.Screen.fXlExport!txtXPFold.text,v.Screen.fXlExport!txtXPName.text,v.Local.sOutFile)
f.Intrinsic.File.Exists(v.Local.sOutFile, v.Local.bCheck)
f.intrinsic.Control.If(v.Local.bCheck,=,true)
	f.Intrinsic.String.Build("The file '{0}' already exists. Please change file name or type in another file name",v.Local.sOutFile,v.Local.sMsg)
	f.Intrinsic.UI.Msgbox(v.Local.sMsg)
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf
f.Intrinsic.Control.if(v.Caller.Switches,=,"R")
	gui.fXlExport.txtXPName.Text("Addl_Roll_Details")
	gui.fAddRollDet.GsGcAddRollDet.Export(v.Local.sOutFile,"xlsx")
	f.Intrinsic.String.Build("The report has beeen successfully exported to file {0}",v.Local.sOutFile,v.Local.sMsg)
	f.Intrinsic.UI.Msgbox(v.Local.sMsg)
f.Intrinsic.Control.ElseIf(v.Caller.Switches,=,"B")
gui.fXlExport.txtXPName.Text("Addl_Bag_Details")
	gui.fAddBagDet.GsGcAddBagDet.Export(v.Local.sOutFile,"xlsx")
	f.Intrinsic.String.Build("The report has beeen successfully exported to file {0}",v.Local.sOutFile,v.Local.sMsg)
	f.Intrinsic.UI.Msgbox(v.Local.sMsg)
F.Intrinsic.Control.Else
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf
f.Intrinsic.Control.CallSub(fXlExport_UnLoad)
f.Intrinsic.Control.catch
f.Intrinsic.Control.CallSub(catching,"sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdExportAct_Click.End

Program.Sub.cmdSelectFold_Click.Start
v.local.sFolder.Declare(string)
f.Intrinsic.Control.Try
'if no folder is selected the path will default to global directory
f.Intrinsic.UI.FolderBrowser("Select a Destination Folder",v.Local.sFolder)
f.Intrinsic.Control.If(v.Local.sFolder,<>,"***CANCEL***")
	gui.fXlExport.txtXPFold.text(v.Local.sFolder)	
f.Intrinsic.control.Else
	gui.fXlExport.txtXPFold.text(v.Caller.GlobalDir)
f.Intrinsic.Control.EndIf
Program.Sub.cmdSelectFold_Click.End

Program.Sub.catching.Start
v.Local.sError.declare(string)
Function.Intrinsic.String.Concat(v.Ambient.Now,": Project: GCG_4646_RoutDash.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",v.Args.sub,V.Ambient.NewLine,"Error Occurred ",V.Args.errorno," with description ",V.args.errordesc,V.Local.sError)
f.Intrinsic.UI.Msgbox(v.Local.sError)
f.Intrinsic.Control.CallSub(Unload_all)
Program.Sub.catching.End
